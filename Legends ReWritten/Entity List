--// Variables \\--
local UserInputService = game:GetService("UserInputService")
local player = game:GetService("Players").LocalPlayer
local mobsFolder = workspace.Mobs
local dropsFolder = workspace.Drops
local selectedBoss
local selectedMob
local selectedDrop

--// UI Settings \\--
local Font = Font.new("rbxasset://fonts/families/Ubuntu.json")
local MainColor = Color3.fromRGB(40, 40, 40)
local SecondaryColor = Color3.fromRGB(30, 30, 30)
local TextColor = Color3.fromRGB(250, 250, 250)

--// UI \\--
local Entities = Instance.new("ScreenGui")
Entities.Name = "Entities"
Entities.IgnoreGuiInset = true

local EntitiesPadding = Instance.new("UIPadding")
EntitiesPadding.Name = "EntitiesPadding"
EntitiesPadding.PaddingBottom = UDim.new(0.225, 0)
EntitiesPadding.PaddingLeft = UDim.new(0.225, 0)
EntitiesPadding.PaddingRight = UDim.new(0.225, 0)
EntitiesPadding.PaddingTop = UDim.new(0.225, 0)
EntitiesPadding.Parent = Entities

local Mainframe = Instance.new("Frame")
Mainframe.Name = "Mainframe"
Mainframe.BackgroundColor3 = MainColor
Mainframe.BorderSizePixel = 0
Mainframe.Position = UDim2.fromScale(0.549, 0.243)
Mainframe.Size = UDim2.fromScale(0.49, 0.49)
Mainframe.Parent = Entities

local DragDetector = Instance.new("UIDragDetector")
DragDetector.Name = "DragDetector"
DragDetector.Parent = Mainframe

local AspectRatio = Instance.new("UIAspectRatioConstraint")
AspectRatio.Name = "AspectRatio"
AspectRatio.AspectRatio = 0.816
AspectRatio.Parent = Mainframe

local MainframePadding = Instance.new("UIPadding")
MainframePadding.Name = "MainframePadding"
MainframePadding.PaddingBottom = UDim.new(0, 8)
MainframePadding.PaddingLeft = UDim.new(0, 8)
MainframePadding.PaddingRight = UDim.new(0, 8)
MainframePadding.PaddingTop = UDim.new(0, 8)
MainframePadding.Parent = Mainframe

local Close = Instance.new("TextButton")
Close.Name = "Close"
Close.AnchorPoint = Vector2.new(1, 0)
Close.BackgroundTransparency = 1
Close.FontFace = Font
Close.Position = UDim2.new(1, 8, 0, -8)
Close.Size = UDim2.fromOffset(16, 16)
Close.Text = "X"
Close.TextColor3 = TextColor
Close.TextScaled = true
Close.ZIndex = 2
Close.Parent = Mainframe

local ClosePadding = Instance.new("UIPadding")
ClosePadding.Name = "ClosePadding"
ClosePadding.PaddingLeft = UDim.new(0.2, 0)
ClosePadding.PaddingRight = UDim.new(0.2, 0)
ClosePadding.Parent = Close

local ContentFrame = Instance.new("Frame")
ContentFrame.Name = "ContentFrame"
ContentFrame.BackgroundTransparency = 1
ContentFrame.ClipsDescendants = true
ContentFrame.Position = UDim2.fromScale(0, 0.051)
ContentFrame.Size = UDim2.fromScale(1, 0.948)
ContentFrame.Parent = Mainframe

local Holders = Instance.new("Frame")
Holders.Name = "Holders"
Holders.BackgroundColor3 = SecondaryColor
Holders.BackgroundTransparency = 1
Holders.Size = UDim2.new(1, 0, 0, 234)
Holders.Parent = ContentFrame

local HoldersPageLayout = Instance.new("UIPageLayout")
HoldersPageLayout.Name = "HoldersPageLayout"
HoldersPageLayout.ScrollWheelInputEnabled = false
HoldersPageLayout.TweenTime = 0.1
HoldersPageLayout.EasingStyle = Enum.EasingStyle.Linear
HoldersPageLayout.SortOrder = Enum.SortOrder.LayoutOrder
HoldersPageLayout.Parent = Holders

local function createHolder()
	local holder = Instance.new("ScrollingFrame")
	holder.AutomaticCanvasSize = Enum.AutomaticSize.Y
	holder.BackgroundColor3 = SecondaryColor
	holder.BorderSizePixel = 0
	holder.ScrollBarThickness = 0
	holder.Size = UDim2.fromScale(1, 1)
	holder.Parent = Holders

	local layout = Instance.new("UIListLayout")
	layout.Parent = holder

	local padding = Instance.new("UIPadding")
	padding.PaddingBottom = UDim.new(0, 1)
	padding.PaddingLeft = UDim.new(0, 1)
	padding.PaddingRight = UDim.new(0, 1)
	padding.PaddingTop = UDim.new(0, 1)
	padding.Parent = holder
	return holder
end

local BossHolder = createHolder()
BossHolder.Name = "BossHolder"

local MobsHolder = createHolder()
MobsHolder.Name = "MobsHolder"

local DropsHolder = createHolder()
DropsHolder.Name = "DropsHolder"

local Buttons = Instance.new("Frame")
Buttons.Name = "Buttons"
Buttons.AnchorPoint = Vector2.new(0, 1)
Buttons.BackgroundColor3 = SecondaryColor
Buttons.BackgroundTransparency = 1
Buttons.Position = UDim2.fromScale(0, 1)
Buttons.Size = UDim2.new(1, 0, 0, 20)
Buttons.Parent = ContentFrame

local ButtonsPageLayout = Instance.new("UIPageLayout")
ButtonsPageLayout.Name = "ButtonsPageLayout"
ButtonsPageLayout.ScrollWheelInputEnabled = false
ButtonsPageLayout.TweenTime = 0.1
ButtonsPageLayout.EasingStyle = Enum.EasingStyle.Linear
ButtonsPageLayout.SortOrder = Enum.SortOrder.LayoutOrder
ButtonsPageLayout.Parent = Buttons

local function createButtonSet()
	local buttonSet = Instance.new("Frame")
	buttonSet.AnchorPoint = Vector2.new(0, 1)
	buttonSet.BackgroundColor3 = SecondaryColor
	buttonSet.BackgroundTransparency = 1
	buttonSet.Position = UDim2.fromScale(0, 1)
	buttonSet.Size = UDim2.new(1, 0, 0, 20)
	buttonSet.Parent = Buttons

	local layout = Instance.new("UIListLayout")
	layout.FillDirection = Enum.FillDirection.Horizontal
	layout.Padding = UDim.new(0, 9)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Parent = buttonSet
	return buttonSet
end

local BossButtons = createButtonSet()
BossButtons.Name = "BossButtons"

local MobButtons = createButtonSet()
MobButtons.Name = "MobButtons"

local DropButtons = createButtonSet()
DropButtons.Name = "DropButtons"

local function createButton(Text, Parent, horPadding, vertPadding)
	local button = Instance.new("TextButton")
	button.BackgroundColor3 = SecondaryColor
	button.BorderSizePixel = 0
	button.FontFace = Font
	button.Size = UDim2.fromOffset(106, 20)
	button.Text = Text
	button.TextColor3 = TextColor
	button.TextScaled = true
	button.Parent = Parent

	local padding = Instance.new("UIPadding")
	padding.PaddingBottom = UDim.new(vertPadding, 0)
	padding.PaddingLeft = UDim.new(horPadding, 0)
	padding.PaddingRight = UDim.new(horPadding, 0)
	padding.PaddingTop = UDim.new(vertPadding, 0)
	padding.Parent = button
	return button
end

local UseEquippedBoss = createButton("Use Equipped", BossButtons, 0.2, 0.15)
UseEquippedBoss.Name = "UseEquippedBoss"

local TPToBoss = createButton("Teleport", BossButtons, 0.2, 0.15)
TPToBoss.Name = "TPToBoss"

local TPToMob = createButton("Teleport", MobButtons, 0.2, 0.15)
TPToMob.Name = "TPToMob"

local UseEquippedMob = createButton("Use Equipped", MobButtons, 0.2, 0.15)
UseEquippedMob.Name = "UseEquippedMob"

local PickUpOne = createButton("Pick Up", DropButtons, 0.292, 0.176)
PickUpOne.Name = "PickUpOne"

local PickUpAll = createButton("Pick Up All", DropButtons, 0.204, 0.176)
PickUpAll.Name = "PickUpAll"

local TabButtons = Instance.new("Frame")
TabButtons.Name = "TabButtons"
TabButtons.BackgroundColor3 = SecondaryColor
TabButtons.BackgroundTransparency = 1
TabButtons.BorderColor3 = Color3.fromRGB(50, 50, 50)
TabButtons.BorderMode = Enum.BorderMode.Inset
TabButtons.Size = UDim2.fromScale(1, 0.051)
TabButtons.Parent = Mainframe

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Name = "UIListLayout"
UIListLayout.FillDirection = Enum.FillDirection.Horizontal
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Parent = TabButtons

local function createTabButton(Text, horPadding, vertPadding)
	local tab = Instance.new("TextButton")
	tab.BackgroundColor3 = SecondaryColor
	tab.BorderColor3 = Color3.fromRGB(50, 50, 50)
	tab.BorderMode = Enum.BorderMode.Inset
	tab.FontFace = Font
	tab.Size = UDim2.fromScale(0.333, 1)
	tab.Text = "Bosses"
	tab.TextColor3 = TextColor
	tab.TextScaled = true
	tab.Parent = TabButtons

	local padding = Instance.new("UIPadding")
	padding.PaddingBottom = UDim.new(vertPadding, 0)
	padding.PaddingLeft = UDim.new(horPadding, 0)
	padding.PaddingRight = UDim.new(horPadding, 0)
	padding.PaddingTop = UDim.new(vertPadding, 0)
	padding.Parent = tab
	return tab
end

local BossesTab = createTabButton("Bosses", 0.32, 0.0622)
BossesTab.Name = "BossesTab"

local MobsTab = createTabButton("Mobs", 0.267, 0.126)
MobsTab.Name = "MobsTab"

local DropsTab = createTabButton("Drops", 0.342, 0.0622)
DropsTab.Name = "DropsTab"

Entities.Parent = game:GetService("CoreGui")

--// Functions \\--
BossesTab.MouseButton1Click:Connect(function()
	HoldersPageLayout:JumpTo(BossHolder)
	ButtonsPageLayout:JumpTo(BossButtons)

	BossesTab.BorderSizePixel = 1
	MobsTab.BorderSizePixel = 0
	DropsTab.BorderSizePixel = 0
end)

MobsTab.MouseButton1Click:Connect(function()
	HoldersPageLayout:JumpTo(MobsHolder)
	ButtonsPageLayout:JumpTo(MobButtons)

	BossesTab.BorderSizePixel = 0
	MobsTab.BorderSizePixel = 1
	DropsTab.BorderSizePixel = 0
end)

DropsTab.MouseButton1Click:Connect(function()
	HoldersPageLayout:JumpTo(DropsHolder)
	ButtonsPageLayout:JumpTo(DropButtons)

	BossesTab.BorderSizePixel = 0
	MobsTab.BorderSizePixel = 0
	DropsTab.BorderSizePixel = 1
end)

local function selectBoss(instance)
	if instance then
		selectedBoss = instance
		for _,v in pairs(BossHolder:GetChildren()) do
			if v:IsA("TextButton") then
				if v.Text == instance.Name then
					v.BorderColor3 = Color3.new(1,0,0)
				else
					v.BorderColor3 = SecondaryColor
				end
			end
		end
	else
		selectedBoss = nil
		for _,v in pairs(BossHolder:GetChildren()) do
			if v:IsA("TextButton") then
				v.BorderColor3 = SecondaryColor
			end
		end
	end
end

local function selectMob(instance)
	if instance then
		selectedMob = instance
		for _,v in pairs(MobsHolder:GetChildren()) do
			if v:IsA("TextButton") then
				if v.Text == instance.Name then
					v.BorderColor3 = Color3.new(1,0,0)
				else
					v.BorderColor3 = SecondaryColor
				end
			end
		end
	else
		selectedMob = nil
		for _,v in pairs(MobsHolder:GetChildren()) do
			if v:IsA("TextButton") then
				v.BorderColor3 = SecondaryColor
			end
		end
	end
end

local function selectDrop(instance)
	if instance then
		print(instance)
		selectedDrop = instance
		for _,v in pairs(DropsHolder:GetChildren()) do
			if v:IsA("TextButton") then
				if v.Text == instance.Touched.textgui.text.Text then
					v.BorderColor3 = Color3.new(1,0,0)
				else
					v.BorderColor3 = SecondaryColor
				end
			end
		end
	else
		selectedDrop = nil
		for _,v in pairs(DropsHolder:GetChildren()) do
			if v:IsA("TextButton") then
				v.BorderColor3 = SecondaryColor
			end
		end
	end
end

local function addEntity(parent, name, onClick)
    local button = Instance.new("TextButton")
    local padding = Instance.new("UIPadding")

    button.FontFace = Font
    button.Text = name
    button.TextColor3 = TextColor
    button.TextScaled = true
    button.BackgroundColor3 = MainColor
    button.BorderColor3 = SecondaryColor
    button.BorderMode = Enum.BorderMode.Inset
    button.Size = UDim2.new(1, 0, 0.087, 0)
    button.Parent = parent

    padding.PaddingBottom = UDim.new(0.15, 0)
    padding.PaddingLeft = UDim.new(0, 0)
    padding.PaddingRight = UDim.new(0, 0)
    padding.PaddingTop = UDim.new(0.15, 0)
    padding.Parent = button

    button.MouseButton1Click:Connect(onClick)

    return button
end

local function addBoss(name, instance)
    local onClick = function()
        if selectedBoss == instance then
            selectBoss(nil)
        else
            selectBoss(instance)
        end
    end

    addEntity(BossHolder, name, onClick)
end

local function addMob(name, instance)
    local onClick = function()
        if selectedMob == instance then
            selectMob(nil)
        else
            selectMob(instance)
        end
    end

    addEntity(MobsHolder, name, onClick)
end

local function addDrop(name, instance)
    local onClick = function()
        if selectedDrop == instance then
            selectDrop(nil)
        else
            selectDrop(instance)
        end
    end

    addEntity(DropsHolder, name, onClick)
end

local function removeEntities(holder)
    for _,v in pairs(holder:GetChildren()) do
		if v:IsA("TextButton") then
			v:Destroy()
		end
	end
end

local function listMobs()
	task.wait()
    local bossCount = {}
	local mobCount = {}

	for _, v in pairs(mobsFolder:GetChildren()) do
		if v:FindFirstChild("Boss") and v.Boss.Value then
			bossCount[v.Name] = v
		else
			mobCount[v.Name] = v
		end
	end

    removeEntities(BossHolder)
    for i, v in pairs(bossCount) do
        addBoss(i, v)
    end
	removeEntities(MobsHolder)
	for i, v in pairs(mobCount) do
		addMob(i, v)
	end
end

local function listDrops()
	task.wait()

	local DropCount = {}

	for _, item in ipairs(dropsFolder:GetChildren()) do
		if item:FindFirstChild("Touched") then
			local itemName = item.Touched.textgui.text.Text
			if DropCount[itemName] then
				DropCount[itemName .. " x" .. DropCount[itemName].count] = nil
				DropCount[itemName].count = DropCount[itemName].count + 1
			else
				DropCount[itemName] = {count = 1, instance = item}
			end
		end
	end

	local newDropCount = {}
	for itemName, itemData in pairs(DropCount) do
		if itemData.count > 1 then
			newDropCount[itemName .. " x" .. itemData.count] = itemData.instance
		else
			newDropCount[itemName] = itemData.instance
		end
	end

	DropCount = newDropCount

	removeEntities(DropsHolder)
	for i, v in pairs(DropCount) do
		addDrop(i, v)
	end
end

--// Logic \\--
listMobs()
listDrops()
mobsFolder.ChildAdded:Connect(listMobs)
mobsFolder.ChildRemoved:Connect(listMobs)
dropsFolder.ChildAdded:Connect(listDrops)
dropsFolder.ChildRemoved:Connect(listDrops)

local function tweenTP(pos, speed)
    local time = (pos - player.Character.HumanoidRootPart.Position).Magnitude / 100

	local tween = game:GetService("TweenService"):Create(player.Character.HumanoidRootPart, TweenInfo.new(time, Enum.EasingStyle.Linear), {
		Position = pos
	})

	tween:Play()
	tween.Completed:Wait() 
	player.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
end

UseEquippedBoss.MouseButton1Click:Connect(function()
	if selectedBoss and player.Character:FindFirstChildOfClass("Tool") then
		local Tool = player.Character:FindFirstChildOfClass("Tool")
		local ToolScript = Tool:FindFirstChildOfClass("Script")
		local Actions = {"Create", "Punch", "Shoot", "Activate", "Throw", "Charge"}
		local ActionOverrides = {
			DismantleV1 = "Activate",
			FireArrow = "Charge"
		}

		if ActionOverrides[Tool.Name] then
			ToolScript[ActionOverrides[Tool.Name]]:FireServer(selectedBoss.HumanoidRootPart.Position)
			return
		else
			for _, action in ipairs(Actions) do
				if ToolScript:FindFirstChild(action) then
					ToolScript[action]:FireServer(selectedBoss.HumanoidRootPart.Position)
					return
				end
			end
		end
	end
end)

TPToBoss.MouseButton1Click:Connect(function()
	if selectedBoss then
		tweenTP(selectedBoss.HumanoidRootPart.Position + Vector3.new(0, 0, 0), 5)
	end
end)

UseEquippedMob.MouseButton1Click:Connect(function()
	if selectedMob and player.Character:FindFirstChildOfClass("Tool") then
		local Tool = player.Character:FindFirstChildOfClass("Tool")
		local ToolScript = Tool:FindFirstChildOfClass("Script")
		local Actions = {"Create", "Punch", "Shoot", "Activate", "Throw", "Charge"}
		local ActionOverrides = {
			DismantleV1 = "Activate",
			FireArrow = "Charge"
		}

		if ActionOverrides[Tool.Name] then
			ToolScript[ActionOverrides[Tool.Name]]:FireServer(selectedMob.HumanoidRootPart.Position)
			return
		else
			for _, action in ipairs(Actions) do
				if ToolScript:FindFirstChild(action) then
					ToolScript[action]:FireServer(selectedMob.HumanoidRootPart.Position)
					return
				end
			end
		end
	end
end)

TPToMob.MouseButton1Click:Connect(function()
	if selectedMob then
		tweenTP(selectedMob.HumanoidRootPart.Position + Vector3.new(0, 0, 0), 5)
	end
end)

PickUpOne.MouseButton1Click:Connect(function()
	if selectedDrop then
		if selectedDrop.Touched.textgui.text.Text == "Gold" then return end
		local item = string.gsub(selectedDrop.Touched.textgui.text.Text, " ", "")
		local amount = selectedDrop.DropAmount.Value

		game:GetService("ReplicatedStorage").Remotes.ObtainDrop:FireServer(item, amount)
		--selectedDrop:Destroy()
	end
end)

PickUpAll.MouseButton1Click:Connect(function()
	for _,v in pairs(workspace.Drops:GetChildren()) do
		if v:FindFirstChild("Touched") then
			local name = v.Touched.textgui.text.Text
			if name == "Gold" then else
				local item = string.gsub(v.Touched.textgui.text.Text, " ", "")
				local amount = v.DropAmount.Value

				game:GetService("ReplicatedStorage").Remotes.ObtainDrop:FireServer(item, amount)
				v:Destroy()
			end
		end
	end
end)