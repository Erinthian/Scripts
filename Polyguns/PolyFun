--// Options
_G.HideUIOnF1 = false
_G.SpaceDeploy = true
_G.FutureLighting = false
_G.DepthOfField = false
-- USE RAMAC112233 FOR EXPLOITS LEL
_G.AutoDeploy = true
_G.AutoCollectCrates = true
_G.KillAll = false
--// Variables
local UserInputService = game:GetService("UserInputService")

local shownUI = {}
local UIhidden = false

local Typing = false
--// Destroy DOF
if game:GetService("Lighting"):FindFirstChild("DOF") then game:GetService("Lighting"):FindFirstChild("DOF"):Destroy() end
--//Hide UI on F1
function onKeyPress(inputObject, gameProcessedEvent)
	if not gameProcessedEvent then
    	if inputObject.KeyCode == Enum.KeyCode.F1 and _G.HideUIOnF1 then 
			if UIhidden then
				for i,v in pairs(game.Players.LocalPlayer.PlayerGui:GetChildren()) do
					if v:IsA("ScreenGui") then
						v.Enabled = true
					end
				end
				UIhidden = false
				local shownUI = {}
			else
				for i,v in pairs(game.Players.LocalPlayer.PlayerGui:GetChildren()) do
					if v:IsA("ScreenGui") and v.Enabled == true then
						table.insert(shownUI, v)
						v.Enabled = false
					end
				end
				UIhidden = true
			end
		end
	end
end
game:GetService("UserInputService").InputBegan:connect(onKeyPress)
--// Detect Typing
UserInputService.TextBoxFocused:Connect(function()
	Typing = true
end)
UserInputService.TextBoxFocusReleased:Connect(function()
	Typing = false
end)
--// Press Space to Deploy
function onKeyPress2(inputObject, gameProcessedEvent)
	if not gameProcessedEvent then
    	if inputObject.KeyCode == Enum.KeyCode.Space and _G.SpaceDeploy and Typing == false then
			game:GetService("ReplicatedStorage").Remotes.Deploy:FireServer()
		end
	end
end
game:GetService("UserInputService").InputBegan:connect(onKeyPress2)
--// Switch To Future Lighting
if _G.FutureLighting then
	sethiddenproperty(game.Lighting, "Technology", Enum.Technology.Future)
end
--// Enable DOF
if _G.DepthOfField then
	local DOF = Instance.new("DepthOfFieldEffect")

	DOF.Name = "DOF"
	DOF.Parent = game:GetService("Lighting")

	DOF.FarIntensity = 0.15
	DOF.FocusDistance = 100
	DOF.NearIntensity = 0
end
--// Auto Deploy
while _G.AutoDeploy do
	wait()
	game.ReplicatedStorage.Remotes.Deploy:FireServer()
end
--// Auto Collect Crates
while _G.AutoCollectCrates and wait(.4) do
	pcall(function()
		for i,v in pairs(game.Workspace.Crates:GetChildren()) do
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Part.CFrame
		end
	end)
end
--// Auto Kill All
local OldNameCall
OldNameCall = hookmetamethod(game, "__namecall", function(...)
    local Self,Args=...
    if getnamecallmethod()=="FireServer" and Self and string.find(Self.Name,"GoodBoy") then
        return
    end
    return OldNameCall(...)
end)
local walter = require(game:GetService("ReplicatedStorage").Modules.RemoteModule)
local function kill(player)
	if player.Character and player.Character:FindFirstChild("Head") then
        walter.Fire("Hit",player.Character.Head)
    end
end
while task.wait() and _G.KillAll do
    for i,v in pairs(game.Players:GetPlayers()) do
            kill(v)
    end
end